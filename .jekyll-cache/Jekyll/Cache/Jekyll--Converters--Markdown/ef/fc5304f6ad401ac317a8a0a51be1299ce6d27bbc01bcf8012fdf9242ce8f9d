I":7<p>사건의 발단은 webflux 로의 전환이었다. A서버 -&gt; B서버 의 api 흐름을 가지는 시스템에서 A서버를 웹플럭스로 전환하여 cpu usage 및 B서버 호출 병렬처리로 response time 을 절약하려는 취지였으나… 배포 후 카나리 상태에서 트래픽을 조금씩 넣기 시작해서 20퍼센트가 되면 이내 서킷이 열리고 장애가 났다. 왜지… 하고 분석하다가 알게된 사실에 대한 정리</p>

<h3 id="메트릭apm-샘플을-열심히-분석">메트릭/apm 샘플을 열심히 분석</h3>
<ol>
  <li>트래픽 없는 상태에서 기능은 정상수행 된다.</li>
  <li>B서버의 리스폰스가 엄청 느려지는 샘플이 계속 찍혔다. requestMapping 부분을 aspect로 감싼 부분에서 찍는 로그에 나온 api 의 실행시간은 변화가 없었으니 톰캣 프레임워크쪽에서 펜딩이 걸렸으려나?</li>
  <li>B서버의 CPU가 점점 튀더니 100을 찍었고, 그 때부터 A서버에서 타임아웃이 나면서 서킷이 열렸다.</li>
</ol>

<h3 id="가설과-기각">가설과 기각</h3>
<ol>
  <li>병렬처리가 너무 빠른 속도로 되어서 B서버가 견디지 못했다.
    <ul>
      <li>병렬처리 빼고 순차처리 해봐도 해소 안됨</li>
    </ul>
  </li>
  <li>웹플럭스 전환 후 어딘가 블락되는 코드가 있어서, B서버와 무관하게 A서버의 잘못이다.
    <ul>
      <li>레디스 방문(ReactiveRedisTemplate 적용)과 api 호출이 전부여서 블락될 구간이 없고, 우선 저 B서버의 cpu 튀는 현상이 설명이 안된다.</li>
    </ul>
  </li>
  <li>httpClient 커넥션 풀 설정이 잘못돼서 커넥션이 매번 새로 연결되느라 그랬다.
    <ul>
      <li>http/1.1 스펙은 디폴트가 keep-alive 고, 혹시 몰라 헤더 넣어도 해결 안됐다.</li>
      <li>B서버의 open files 가 튀지 않아서 우선은 아닌걸로…</li>
    </ul>
  </li>
</ol>

<h3 id="딥다이브">딥다이브</h3>
<p>하여, 이유를 도무지 알 수 없어 로컬에서 A서버를 구버전으로 왔다갔다 하며 tcp 덤프를 떠본 결과… 문제가 웹플럭스가 아니라  <strong><em>http 클라이언트를 restTemplate -&gt; webClient 로 변환한 부분</em></strong>이었음을 알아냈다. B서버 쪽으로 <code class="language-plaintext highlighter-rouge">Cookie: JSESSIONID=AE0B...</code> 하는 헤더가 들어오지 않은 것이다. 엥??</p>

<p><a href="https://datatracker.ietf.org/doc/html/rfc6265">RFC-6265</a> 에 따르면 마땅히 서버가 리스폰스에 <code class="language-plaintext highlighter-rouge">Set-Cookie</code> 헤더를 내려주면 클라이언트는 다음 요청부터 쿠키를 넣어서 보내야 하는데, webClient 는 이 동작이 없었던 것이다.</p>

<p><br /></p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="nd">@RequestMapping</span><span class="p">(</span><span class="s">"/"</span><span class="p">)</span>
<span class="kd">class</span> <span class="nc">Controller</span><span class="p">(</span>
    <span class="k">private</span> <span class="kd">val</span> <span class="py">webClient</span><span class="p">:</span> <span class="nc">WebClient</span><span class="p">,</span>
    <span class="k">private</span> <span class="kd">val</span> <span class="py">restTemplate</span><span class="p">:</span> <span class="nc">RestTemplate</span><span class="p">,</span>
<span class="p">)</span> <span class="p">{</span>
    <span class="k">enum</span> <span class="kd">class</span> <span class="nc">Type</span> <span class="p">{</span>
        <span class="nc">REST_TEMPLATE</span><span class="p">,</span>
        <span class="nc">WEB_CLIENT</span>
    <span class="p">}</span>

    <span class="nd">@GetMapping</span><span class="p">(</span><span class="s">"test"</span><span class="p">)</span>
    <span class="k">fun</span> <span class="nf">test</span><span class="p">(</span>
        <span class="nd">@RequestParam</span><span class="p">(</span><span class="s">"type"</span><span class="p">)</span> <span class="n">type</span><span class="p">:</span> <span class="nc">Type</span>
    <span class="p">):</span> <span class="nc">Map</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">,</span> <span class="nc">String</span><span class="p">&gt;</span> <span class="p">{</span>
        <span class="kd">val</span> <span class="py">uri</span> <span class="p">=</span> <span class="s">"http://localhost:8080/get-cookie?type=$type"</span>
        <span class="kd">val</span> <span class="p">(</span><span class="py">user</span><span class="p">,</span> <span class="py">password</span><span class="p">)</span> <span class="p">=</span> <span class="nc">Auth</span><span class="p">.</span><span class="n">userPassword</span>

        <span class="k">return</span> <span class="k">when</span> <span class="p">(</span><span class="n">type</span><span class="p">)</span> <span class="p">{</span>
            <span class="nc">Type</span><span class="p">.</span><span class="nc">REST_TEMPLATE</span> <span class="p">-&gt;</span> <span class="p">{</span>
                <span class="n">restTemplate</span><span class="p">.</span><span class="nf">exchange</span><span class="p">(</span>
                    <span class="n">uri</span><span class="p">,</span>
                    <span class="nc">HttpMethod</span><span class="p">.</span><span class="nc">GET</span><span class="p">,</span>
                    <span class="nc">HttpEntity</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="nc">HttpHeaders</span><span class="p">().</span><span class="nf">also</span> <span class="p">{</span> <span class="n">it</span><span class="p">.</span><span class="nf">setBasicAuth</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span> <span class="p">}),</span>
                    <span class="kd">object</span> <span class="err">: </span><span class="nc">ParameterizedTypeReference</span><span class="p">&lt;</span><span class="nc">Map</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">,</span> <span class="nc">String</span><span class="p">&gt;&gt;()</span> <span class="p">{}</span>
                <span class="p">).</span><span class="n">body</span><span class="o">!!</span>
            <span class="p">}</span>
            <span class="nc">Type</span><span class="p">.</span><span class="nc">WEB_CLIENT</span> <span class="p">-&gt;</span> <span class="p">{</span>
                <span class="n">webClient</span><span class="p">.</span><span class="k">get</span><span class="p">()</span>
                    <span class="p">.</span><span class="nf">uri</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
                    <span class="p">.</span><span class="nf">headers</span> <span class="p">{</span> <span class="n">it</span><span class="p">.</span><span class="nf">setBasicAuth</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span> <span class="p">}</span>
                    <span class="p">.</span><span class="nf">retrieve</span><span class="p">()</span>
                    <span class="p">.</span><span class="nf">bodyToMono</span><span class="p">(</span><span class="kd">object</span> <span class="err">: </span><span class="nc">ParameterizedTypeReference</span><span class="p">&lt;</span><span class="nc">Map</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">,</span> <span class="nc">String</span><span class="p">&gt;&gt;()</span> <span class="p">{})</span>
                    <span class="p">.</span><span class="nf">block</span><span class="p">()</span><span class="o">!!</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="nd">@GetMapping</span><span class="p">(</span><span class="s">"get-cookie"</span><span class="p">)</span>
    <span class="k">fun</span> <span class="nf">getHeader</span><span class="p">(</span>
        <span class="n">httpServletRequest</span><span class="p">:</span> <span class="nc">HttpServletRequest</span><span class="p">,</span>
    <span class="p">):</span> <span class="nc">Map</span><span class="p">&lt;</span><span class="nc">String</span><span class="p">,</span> <span class="nc">String</span><span class="p">&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nf">mapOf</span><span class="p">(</span><span class="s">"Cookie"</span> <span class="nf">to</span> <span class="p">(</span><span class="n">httpServletRequest</span><span class="p">.</span><span class="n">cookies</span><span class="o">?.</span><span class="k">get</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?.</span><span class="nf">let</span> <span class="p">{</span> <span class="s">"${it.name}=${it.value}"</span> <span class="p">}</span> <span class="o">?:</span> <span class="s">"null"</span><span class="p">))</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nd">@Configuration</span>
<span class="kd">class</span> <span class="nc">Security</span> <span class="p">:</span> <span class="nc">WebSecurityConfigurerAdapter</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">override</span> <span class="k">fun</span> <span class="nf">configure</span><span class="p">(</span><span class="n">http</span><span class="p">:</span> <span class="nc">HttpSecurity</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">http</span>
            <span class="p">.</span><span class="nf">httpBasic</span><span class="p">()</span>
            <span class="p">.</span><span class="nf">and</span><span class="p">()</span>
                <span class="p">.</span><span class="nf">authorizeRequests</span><span class="p">()</span>
                <span class="p">.</span><span class="nf">antMatchers</span><span class="p">(</span><span class="s">"/get-cookie"</span><span class="p">)</span>
                <span class="p">.</span><span class="nf">hasRole</span><span class="p">(</span><span class="nc">Auth</span><span class="p">.</span><span class="n">role</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">override</span> <span class="k">fun</span> <span class="nf">configure</span><span class="p">(</span><span class="n">auth</span><span class="p">:</span> <span class="nc">AuthenticationManagerBuilder</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">val</span> <span class="py">encoder</span> <span class="p">=</span> <span class="nc">PasswordEncoderFactories</span><span class="p">.</span><span class="nf">createDelegatingPasswordEncoder</span><span class="p">()</span>
        <span class="kd">val</span> <span class="p">(</span><span class="py">user</span><span class="p">,</span> <span class="py">password</span><span class="p">)</span> <span class="p">=</span> <span class="nc">Auth</span><span class="p">.</span><span class="n">userPassword</span>
        <span class="n">auth</span><span class="p">.</span><span class="nf">inMemoryAuthentication</span><span class="p">()</span>
            <span class="p">.</span><span class="nf">withUser</span><span class="p">(</span><span class="n">user</span><span class="p">).</span><span class="nf">password</span><span class="p">(</span><span class="n">encoder</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="n">password</span><span class="p">)).</span><span class="nf">roles</span><span class="p">(</span><span class="nc">Auth</span><span class="p">.</span><span class="n">role</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이 코드는 <code class="language-plaintext highlighter-rouge">spring-boot-starter-security</code> 를 사용했다. <code class="language-plaintext highlighter-rouge">/get-cookie</code> api 는 basicAuth 가 적용되어 있고 리퀘스트의 <code class="language-plaintext highlighter-rouge">Cookie</code> 헤더를 리턴한다. <code class="language-plaintext highlighter-rouge">/test</code> api 는 호출시 파라미터에 따라 각각 restTemplate/webClient 를 이용해서 <code class="language-plaintext highlighter-rouge">/get-cookie</code> 를 호출하며, 그 호출의 응답을 그대로 리턴한다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whojes@whojes01-2:~/<span class="nv">$ </span>curl <span class="s2">"localhost:8080/test?type=REST_TEMPLATE"</span>
<span class="o">{</span><span class="s2">"Cookie"</span>:<span class="s2">"null"</span><span class="o">}</span>
whojes@whojes01-2:~/<span class="nv">$ </span>curl <span class="s2">"localhost:8080/test?type=REST_TEMPLATE"</span>
<span class="o">{</span><span class="s2">"Cookie"</span>:<span class="s2">"JSESSIONID=407F0D466773B4F5DA32BD0B863BF0EB"</span><span class="o">}</span>
whojes@whojes01-2:~/<span class="err">$</span>
whojes@whojes01-2:~/<span class="nv">$ </span>curl <span class="s2">"localhost:8080/test?type=WEB_CLIENT"</span>
<span class="o">{</span><span class="s2">"Cookie"</span>:<span class="s2">"null"</span><span class="o">}</span>
whojes@whojes01-2:~/<span class="nv">$ </span>curl <span class="s2">"localhost:8080/test?type=WEB_CLIENT"</span>
<span class="o">{</span><span class="s2">"Cookie"</span>:<span class="s2">"null"</span><span class="o">}</span>
whojes@whojes01-2:~/<span class="nv">$ </span>curl <span class="s2">"localhost:8080/test?type=REST_TEMPLATE"</span>
<span class="o">{</span><span class="s2">"Cookie"</span>:<span class="s2">"JSESSIONID=407F0D466773B4F5DA32BD0B863BF0EB"</span><span class="o">}</span>
whojes@whojes01-2:~/<span class="nv">$ </span>
</code></pre></div></div>
:ET